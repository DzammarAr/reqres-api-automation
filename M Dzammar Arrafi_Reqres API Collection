{
	"info": {
		"_postman_id": "16ca733a-4a56-4cf6-aec8-0447024cf3bb",
		"name": "Reqres API Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41718448"
	},
	"item": [
		{
			"name": "Get List Users",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"page\": { \"type\": \"number\" },\r",
							"        \"per_page\": { \"type\": \"number\" },\r",
							"        \"total\": { \"type\": \"number\" },\r",
							"        \"total_pages\": { \"type\": \"number\" },\r",
							"        \"data\": {\r",
							"            \"type\": \"array\",\r",
							"            \"items\": {\r",
							"                \"type\": \"object\",\r",
							"                \"properties\": {\r",
							"                    \"id\": { \"type\": \"number\" },\r",
							"                    \"email\": { \"type\": \"string\" },\r",
							"                    \"first_name\": { \"type\": \"string\" },\r",
							"                    \"last_name\": { \"type\": \"string\" },\r",
							"                    \"avatar\": { \"type\": \"string\" }\r",
							"                },\r",
							"                \"required\": [\"id\", \"email\", \"first_name\", \"last_name\", \"avatar\"]\r",
							"            }\r",
							"        }\r",
							"    },\r",
							"    \"required\": [\"page\", \"per_page\", \"total\", \"total_pages\", \"data\"]\r",
							"};\r",
							"\r",
							"pm.test(\"Schema is valid\", function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users?page=2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"const schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"name\": { \"type\": \"string\" },\r",
							"        \"job\": { \"type\": \"string\" },\r",
							"        \"id\": { \"type\": \"string\" },\r",
							"        \"createdAt\": { \"type\": \"string\" }\r",
							"    },\r",
							"    \"required\": [\"name\", \"job\", \"id\", \"createdAt\"]\r",
							"};\r",
							"\r",
							"pm.test(\"Schema is valid\", function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"leader\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"name\": { \"type\": \"string\" },\r",
							"        \"job\": { \"type\": \"string\" },\r",
							"        \"updatedAt\": { \"type\": \"string\" }\r",
							"    },\r",
							"    \"required\": [\"name\", \"job\", \"updatedAt\"]\r",
							"};\r",
							"\r",
							"pm.test(\"Schema is valid\", function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion resident\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users/2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users/2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		}
	]
}